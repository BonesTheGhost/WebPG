.consoleContainer{
  box-shadow: inset 0px 0px 30px 5px rgba(255, 255, 255, 0.25);
}

.consoleContainer p {
  color: rgb(13, 165, 13);
  font-size: 1.5rem;
  font-weight: bold;

  padding-top: 0rem;
  padding-right: 0rem;
  padding-bottom: 0rem;
  padding-left: 0rem;
}

.aboutContainer p{
  color: rgb(13, 165, 13);

  font-size: 1.5rem;
  font-weight: bold;

  padding-top: 0rem;
  padding-right: 0rem;
  padding-bottom: 0rem;
  padding-left: 0rem;
}

.aboutDiv{
  /*Ensures content isn't show until the animation completes*/
  overflow:hidden;
  /* to keep all on one line: white-space: nowrap; */
  animation: typing 1s steps(30, end);
}

.expDiv{
  /*Ensures content isn't show until the animation completes*/
  overflow:hidden;
  /* to keep all on one line: white-space: nowrap; */
  animation: typing 1s steps(30, end);
}

.playerChoices{
  margin: 0;

  padding-top: 0rem;
  padding-right: 0rem;
  padding-bottom: 0rem;
  padding-left: 0rem;
}

.playerChoices p{
  margin: 0;

  padding: 0;
  padding-left: 2rem;
  padding-top: 1rem;
  display: inline-block;
}

.playerChoices i{
  padding: .5rem;
  padding-right: 0rem;
}

.choicesDiv {
  /*Ensures content isn't show until the animation completes*/
  overflow:hidden;
  /* to keep all on one line: white-space: nowrap; */
  animation: typing 1s steps(30, end);
}

#input1{
  padding-left: 5rem;
  padding-right: 5rem;
  color:rgb(230, 230, 230);
}
#input2{
  padding-left: 5rem;
  padding-right: 5rem;
  color:rgb(230, 230, 230);
}
#input3{
  padding-left: 5rem;
  padding-right: 5rem;
  color:rgb(230, 230, 230);
}
#input4{
  padding-left: 5rem;
  padding-right: 5rem;
  color:rgb(230, 230, 230);
}

#com0{
  color: rgb(21, 180, 21);
  
  grid-area: com0;
  padding-top: 2rem;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 2rem;
}
#com1Div{
  color: rgb(10, 134, 10);
  grid-area: com1Div;
  padding-left: 1rem;
}
#com2Div{
  color: rgb(10, 134, 10);
  grid-area: com2Div;
  padding-left: 1rem;
}
#com3Div{
  color: rgb(10, 134, 10);
  grid-area: com3Div;
  padding-left: 1rem;
}
#com4Div{
  color: rgb(10, 134, 10);
  grid-area: com4Div;
  padding-left: 1rem;
}

.notAvailable{
  opacity: 50%;
  color: red;
}

.highlight{
  color: rgb(109, 236, 109);
}

/* TYPING ANIMATIONS */
@keyframes typing {
  from {
    height: 0;
  }
  to {
    height: 100%;
  }
}

@keyframes typing2 {
  from {
    height: 0;
  }
  to {
    height: 100%;
  }
}


/* SECOND VERSION TO TOGGLE ANIMATION ON EACH UPDATE.*/
/* According to CSS-Tricks, this is the easiest way to accomplish the effect I want
(a text scrolling animation on each text output to the console area) due to CSS animations
not being simply "restart-able". I played with removing the animation, setting display to none
for the respective elements, etc. Anim's seem to run almost asynchronously, like setTimeout, their
runs are set and completed in a separate handler that has a consistent state even if the
anim is overwritten or the element is removed. Its bloaty, but unfortunately this is what I have.*/


.expDiv.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}

#com0.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}
#com1Div.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}
#com2Div.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}
#com3Div.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}
#com4Div.resetAnim{
  animation: typing2 1s steps(60, end) 0s;
  animation-fill-mode: forwards;
}

/* THE BLINKING ANIMATION : the width is crucial because default width is 0 for typing animation!*/
#com1Div.blink{
  width: 100%;
  animation: blink .5s infinite;
  animation-fill-mode: both;
  color: rgb(109, 236, 109);
}
#com2Div.blink{
  width: 100%;
  animation: blink .5s infinite;
  color: rgb(109, 236, 109);
}
#com3Div.blink{
  width: 100%;
  animation: blink .5s infinite;
  color: rgb(109, 236, 109);
}
#com4Div.blink{
  width: 100%;
  animation: blink .5s infinite;
  color: rgb(109, 236, 109);
}

@keyframes blink{
  50%{
    opacity: 50%;
  }
}

